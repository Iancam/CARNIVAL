bounds <- write_boundaries(variables = variables)
oF <- write_objective_function(dataMatrix = dataMatrix, variables = variables, alpha = 1, beta = 0.01)
c0 <- write_constraints_objFunction(variables = variables, dataMatrix = dataMatrix)
c1 <- write_constraints_1(variables = variables)
c2 <- write_constraints_2(variables = variables)
c3 <- write_constraints_3(variables = variables)
c4 <- write_constraints_4(variables = variables)
c5 <- write_constraints_5(variables = variables)
c6 <- write_constraints_6(variables = variables, dataMatrix = dataMatrix)
c7 <- write_constraints_7(variables = variables, dataMatrix = dataMatrix)
c8 <- write_constraints_8(variables = variables, inputs = inputs)
allC <- all_constraints(c0 = c0, c1 = c2, c2 = c2, c3 = c3, c4 = c4, c5 = c5, c6 = c6, c7 = c7, c8 = c8)
# write the .lp file
data = "testFile.lp"
write("enter Problem", data)
write("", data, append = TRUE)
write("Minimize", data, append = TRUE)
write(oF, data, append = TRUE)
write("Subject To", data, append = TRUE)
write(allC, data, append = TRUE)
write("Bounds", data, append = TRUE)
write(bounds, data, append = TRUE)
write("Integers", data, append = TRUE)
write(variables$variables, data, append = TRUE)
write("End", data, append = TRUE)
system(paste0(getwd(), "/cplex -f cplexCommand.txt"))
file.remove(... = "cplex.log")
# file.remove(... = "testFile.lp")
variables$exp
oF
c0
c1
c2
c3
c4
c5
c6
c7
c8
nrow(dataMatrix$dataMatrix)
variables$exp
constraints6 <- c()
cntNodes <- 0
cntEdges <- 0
i <- 2
i <- 1
intervalNodes <- c((1+cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((1+cntEdges):variables$idxExperimentEdges[i])
cntNodes <- cntNodes + intervalNodes[length(intervalNodes)]
cntEdges <- cntEdges + intervalEdges[length(intervalEdges)]
i <- 2
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUpTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
kk1
kk2
j <- 1
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
pp
experimentalNode <- variables$expNodesReducedUpTarget[intervalNodes][kk2[j]]
constraints6 <- c(constraints6,
paste0(variables$variables[which(variables$exp==paste0("SpeciesUP ", experimentalNode, " in experiment ", i))], pp, " <= 0"))
constraints6
variables$exp
constraints6 <- c()
cntNodes <- 0
cntEdges <- 0
for(i in 1:nrow(dataMatrix$dataMatrix)){
intervalNodes <- c((1+cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((1+cntEdges):variables$idxExperimentEdges[i])
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUpTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
for(j in 1:length(kk2)){
# kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUp[intervalNodes])
# kk2 <- unique(kk1[!is.na(kk1)])
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
experimentalNode <- variables$expNodesReducedUpTarget[intervalNodes][kk2[j]]
constraints6 <- c(constraints6,
paste0(variables$variables[which(variables$exp==paste0("SpeciesUP ", experimentalNode, " in experiment ", i))], pp, " <= 0"))
}
cntNodes <- cntNodes + intervalNodes[length(intervalNodes)]
cntEdges <- cntEdges + intervalEdges[length(intervalEdges)]
}
constraints6
variables$exp
experimentalNode
intervalNodes
intervalEdges
variables$idxExperimentNodes
cntNodes
cntEdges
rm(list = ls())
####
# Loading stuff
rm(list=ls())
source("script1.R")
library(readr)
measurements <- read_delim("measurements_Case1_AND_Case4.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
inputs <- read.table("inputs_Case1_AND_Case4.txt", sep="\t", header = TRUE)
network <- read.table("network_Ex1_positive.sif", sep = "\t", header = FALSE)
data <- measurements
pknList <- as.data.frame(network)
colnames(pknList) <- c("Node1", "Sign", "Node2")
# upNodes <- "P"
####
# Executing functions
dataMatrix <- buildDataMatrix(data = data, pknList = pknList, inputs = inputs, cutoff = 0.1)
variables <- create_variables(pknList = pknList, dataMatrix = dataMatrix)
bounds <- write_boundaries(variables = variables)
oF <- write_objective_function(dataMatrix = dataMatrix, variables = variables, alpha = 1, beta = 0.01)
c0 <- write_constraints_objFunction(variables = variables, dataMatrix = dataMatrix)
c1 <- write_constraints_1(variables = variables)
c2 <- write_constraints_2(variables = variables)
c3 <- write_constraints_3(variables = variables)
c4 <- write_constraints_4(variables = variables)
c5 <- write_constraints_5(variables = variables)
c6 <- write_constraints_6(variables = variables, dataMatrix = dataMatrix)
c7 <- write_constraints_7(variables = variables, dataMatrix = dataMatrix)
c8 <- write_constraints_8(variables = variables, inputs = inputs)
allC <- all_constraints(c0 = c0, c1 = c2, c2 = c2, c3 = c3, c4 = c4, c5 = c5, c6 = c6, c7 = c7, c8 = c8)
# write the .lp file
data = "testFile.lp"
write("enter Problem", data)
write("", data, append = TRUE)
write("Minimize", data, append = TRUE)
write(oF, data, append = TRUE)
write("Subject To", data, append = TRUE)
write(allC, data, append = TRUE)
write("Bounds", data, append = TRUE)
write(bounds, data, append = TRUE)
write("Integers", data, append = TRUE)
write(variables$variables, data, append = TRUE)
write("End", data, append = TRUE)
system(paste0(getwd(), "/cplex -f cplexCommand.txt"))
file.remove(... = "cplex.log")
# file.remove(... = "testFile.lp")
variables$exp
c6
c7
variables$exp
nrow(dataMatrix$dataMatrix)
i <- 2
i <- 1
constraints6 <- c()
cntNodes <- 0
cntEdges <- 0
intervalNodes <- c((1+cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((1+cntEdges):variables$idxExperimentEdges[i])
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUpTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
intervalNodes
intervalEdges
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
kk2
j <- 1
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
experimentalNode <- variables$expNodesReducedUpTarget[intervalNodes][kk2[j]]
constraints6 <- c(constraints6,
paste0(variables$variables[which(variables$exp==paste0("SpeciesUP ", experimentalNode, " in experiment ", i))], pp, " <= 0"))
constraints6
cntNodes <- variables$idxExperimentNodes[i]-cntNodes+1
cntEdges <- variables$idxExperimentEdges[i]-cntEdges+1
cntNodes
cntEdges
i <- 2
intervalNodes <- c((1+cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((1+cntEdges):variables$idxExperimentEdges[i])
intervalNodes
intervalEdges
####
# Loading stuff
rm(list=ls())
source("script1.R")
library(readr)
measurements <- read_delim("measurements_Case1_AND_Case4.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
inputs <- read.table("inputs_Case1_AND_Case4.txt", sep="\t", header = TRUE)
network <- read.table("network_Ex1_positive.sif", sep = "\t", header = FALSE)
data <- measurements
pknList <- as.data.frame(network)
colnames(pknList) <- c("Node1", "Sign", "Node2")
# upNodes <- "P"
####
# Executing functions
dataMatrix <- buildDataMatrix(data = data, pknList = pknList, inputs = inputs, cutoff = 0.1)
variables <- create_variables(pknList = pknList, dataMatrix = dataMatrix)
bounds <- write_boundaries(variables = variables)
oF <- write_objective_function(dataMatrix = dataMatrix, variables = variables, alpha = 1, beta = 0.01)
c0 <- write_constraints_objFunction(variables = variables, dataMatrix = dataMatrix)
c1 <- write_constraints_1(variables = variables)
c2 <- write_constraints_2(variables = variables)
c3 <- write_constraints_3(variables = variables)
c4 <- write_constraints_4(variables = variables)
c5 <- write_constraints_5(variables = variables)
c6 <- write_constraints_6(variables = variables, dataMatrix = dataMatrix)
c7 <- write_constraints_7(variables = variables, dataMatrix = dataMatrix)
c8 <- write_constraints_8(variables = variables, inputs = inputs)
allC <- all_constraints(c0 = c0, c1 = c2, c2 = c2, c3 = c3, c4 = c4, c5 = c5, c6 = c6, c7 = c7, c8 = c8)
# write the .lp file
data = "testFile.lp"
write("enter Problem", data)
write("", data, append = TRUE)
write("Minimize", data, append = TRUE)
write(oF, data, append = TRUE)
write("Subject To", data, append = TRUE)
write(allC, data, append = TRUE)
write("Bounds", data, append = TRUE)
write(bounds, data, append = TRUE)
write("Integers", data, append = TRUE)
write(variables$variables, data, append = TRUE)
write("End", data, append = TRUE)
system(paste0(getwd(), "/cplex -f cplexCommand.txt"))
file.remove(... = "cplex.log")
# file.remove(... = "testFile.lp")
variables$exp
c6
c5
constraints6 <- c()
cntNodes <- 1
cntEdges <- 1
i <- 1
intervalNodes <- c((cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((cntEdges):variables$idxExperimentEdges[i])
intervalNodes
intervalEdges
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUpTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
kk1
kk2
j <- 1
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
pp
experimentalNode <- variables$expNodesReducedUpTarget[intervalNodes][kk2[j]]
constraints6 <- c(constraints6,
paste0(variables$variables[which(variables$exp==paste0("SpeciesUP ", experimentalNode, " in experiment ", i))], pp, " <= 0"))
experimentalNode
cntNodes <- variables$idxExperimentNodes[i]-cntNodes+1
cntEdges <- variables$idxExperimentEdges[i]-cntEdges+1
cntNodes
cntEdges
####
# Loading stuff
rm(list=ls())
source("script1.R")
library(readr)
measurements <- read_delim("measurements_Case1_AND_Case4.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
inputs <- read.table("inputs_Case1_AND_Case4.txt", sep="\t", header = TRUE)
network <- read.table("network_Ex1_positive.sif", sep = "\t", header = FALSE)
data <- measurements
pknList <- as.data.frame(network)
colnames(pknList) <- c("Node1", "Sign", "Node2")
# upNodes <- "P"
####
# Executing functions
dataMatrix <- buildDataMatrix(data = data, pknList = pknList, inputs = inputs, cutoff = 0.1)
variables <- create_variables(pknList = pknList, dataMatrix = dataMatrix)
bounds <- write_boundaries(variables = variables)
oF <- write_objective_function(dataMatrix = dataMatrix, variables = variables, alpha = 1, beta = 0.01)
c0 <- write_constraints_objFunction(variables = variables, dataMatrix = dataMatrix)
c1 <- write_constraints_1(variables = variables)
c2 <- write_constraints_2(variables = variables)
c3 <- write_constraints_3(variables = variables)
c4 <- write_constraints_4(variables = variables)
c5 <- write_constraints_5(variables = variables)
c6 <- write_constraints_6(variables = variables, dataMatrix = dataMatrix)
c7 <- write_constraints_7(variables = variables, dataMatrix = dataMatrix)
c8 <- write_constraints_8(variables = variables, inputs = inputs)
allC <- all_constraints(c0 = c0, c1 = c2, c2 = c2, c3 = c3, c4 = c4, c5 = c5, c6 = c6, c7 = c7, c8 = c8)
# write the .lp file
data = "testFile.lp"
write("enter Problem", data)
write("", data, append = TRUE)
write("Minimize", data, append = TRUE)
write(oF, data, append = TRUE)
write("Subject To", data, append = TRUE)
write(allC, data, append = TRUE)
write("Bounds", data, append = TRUE)
write(bounds, data, append = TRUE)
write("Integers", data, append = TRUE)
write(variables$variables, data, append = TRUE)
write("End", data, append = TRUE)
system(paste0(getwd(), "/cplex -f cplexCommand.txt"))
file.remove(... = "cplex.log")
# file.remove(... = "testFile.lp")
variables$exp
c6
c7
constraints6 <- c()
cntNodes <- 1
cntEdges <- 1
intervalNodes <- c((cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((cntEdges):variables$idxExperimentEdges[i])
i <- 1
intervalNodes <- c((cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((cntEdges):variables$idxExperimentEdges[i])
intervalEdges
intervalNodes
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUpTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
kk1
kk2
j <- 1
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
experimentalNode <- variables$expNodesReducedUpTarget[intervalNodes][kk2[j]]
constraints6 <- c(constraints6,
paste0(variables$variables[which(variables$exp==paste0("SpeciesUP ", experimentalNode, " in experiment ", i))], pp, " <= 0"))
pp
experimentalNode
constraints6
cntNodes <- variables$idxExperimentNodes[i]-cntNodes
cntEdges <- variables$idxExperimentEdges[i]-cntEdges
cntNodes
cntEdges
rm(list = ls())
####
# Loading stuff
rm(list=ls())
source("script1.R")
library(readr)
measurements <- read_delim("measurements_Case1_AND_Case4.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
inputs <- read.table("inputs_Case1_AND_Case4.txt", sep="\t", header = TRUE)
network <- read.table("network_Ex1_positive.sif", sep = "\t", header = FALSE)
data <- measurements
pknList <- as.data.frame(network)
colnames(pknList) <- c("Node1", "Sign", "Node2")
# upNodes <- "P"
####
# Executing functions
dataMatrix <- buildDataMatrix(data = data, pknList = pknList, inputs = inputs, cutoff = 0.1)
variables <- create_variables(pknList = pknList, dataMatrix = dataMatrix)
bounds <- write_boundaries(variables = variables)
oF <- write_objective_function(dataMatrix = dataMatrix, variables = variables, alpha = 1, beta = 0.01)
c0 <- write_constraints_objFunction(variables = variables, dataMatrix = dataMatrix)
c1 <- write_constraints_1(variables = variables)
c2 <- write_constraints_2(variables = variables)
c3 <- write_constraints_3(variables = variables)
c4 <- write_constraints_4(variables = variables)
c5 <- write_constraints_5(variables = variables)
c6 <- write_constraints_6(variables = variables, dataMatrix = dataMatrix)
c7 <- write_constraints_7(variables = variables, dataMatrix = dataMatrix)
c8 <- write_constraints_8(variables = variables, inputs = inputs)
allC <- all_constraints(c0 = c0, c1 = c2, c2 = c2, c3 = c3, c4 = c4, c5 = c5, c6 = c6, c7 = c7, c8 = c8)
# write the .lp file
data = "testFile.lp"
write("enter Problem", data)
write("", data, append = TRUE)
write("Minimize", data, append = TRUE)
write(oF, data, append = TRUE)
write("Subject To", data, append = TRUE)
write(allC, data, append = TRUE)
write("Bounds", data, append = TRUE)
write(bounds, data, append = TRUE)
write("Integers", data, append = TRUE)
write(variables$variables, data, append = TRUE)
write("End", data, append = TRUE)
system(paste0(getwd(), "/cplex -f cplexCommand.txt"))
file.remove(... = "cplex.log")
# file.remove(... = "testFile.lp")
variables$exp
c6
c7
constraints7 <- c()
cntNodes <- 1
cntEdges <- 1
i <- 1
intervalNodes <- c((cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((cntEdges):variables$idxExperimentEdges[i])
intervalEdges
intervalNodes
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedDownTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
j <- 1
pp <- paste(" - ", variables$variables[variables$idxEdgesDown[which(kk1==kk2[j])]], collapse = "")
pp
experimentalNode <- variables$expNodesReducedDownTarget[intervalNodes][kk2[j]]
constraints7 <- c(constraints7,
paste0(variables$variables[which(variables$exp==paste0("SpeciesDown ", experimentalNode, " in experiment ", i))], pp, " <= 0"))
constraints7
cntNodes
####
# Loading stuff
rm(list=ls())
source("script1.R")
library(readr)
measurements <- read_delim("measurements_Case1_AND_Case4.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
inputs <- read.table("inputs_Case1_AND_Case4.txt", sep="\t", header = TRUE)
network <- read.table("network_Ex1_positive.sif", sep = "\t", header = FALSE)
data <- measurements
pknList <- as.data.frame(network)
colnames(pknList) <- c("Node1", "Sign", "Node2")
# upNodes <- "P"
####
# Executing functions
dataMatrix <- buildDataMatrix(data = data, pknList = pknList, inputs = inputs, cutoff = 0.1)
variables <- create_variables(pknList = pknList, dataMatrix = dataMatrix)
bounds <- write_boundaries(variables = variables)
oF <- write_objective_function(dataMatrix = dataMatrix, variables = variables, alpha = 1, beta = 0.01)
c0 <- write_constraints_objFunction(variables = variables, dataMatrix = dataMatrix)
c1 <- write_constraints_1(variables = variables)
c2 <- write_constraints_2(variables = variables)
c3 <- write_constraints_3(variables = variables)
c4 <- write_constraints_4(variables = variables)
c5 <- write_constraints_5(variables = variables)
c6 <- write_constraints_6(variables = variables, dataMatrix = dataMatrix)
c7 <- write_constraints_7(variables = variables, dataMatrix = dataMatrix)
c8 <- write_constraints_8(variables = variables, inputs = inputs)
allC <- all_constraints(c0 = c0, c1 = c2, c2 = c2, c3 = c3, c4 = c4, c5 = c5, c6 = c6, c7 = c7, c8 = c8)
# write the .lp file
data = "testFile.lp"
write("enter Problem", data)
write("", data, append = TRUE)
write("Minimize", data, append = TRUE)
write(oF, data, append = TRUE)
write("Subject To", data, append = TRUE)
write(allC, data, append = TRUE)
write("Bounds", data, append = TRUE)
write(bounds, data, append = TRUE)
write("Integers", data, append = TRUE)
write(variables$variables, data, append = TRUE)
write("End", data, append = TRUE)
system(paste0(getwd(), "/cplex -f cplexCommand.txt"))
file.remove(... = "cplex.log")
# file.remove(... = "testFile.lp")
variables$exp
c6
c7
constraints6 <- c()
cntNodes <- 1
cntEdges <- 1
i <- 1
intervalNodes <- c((cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((cntEdges):variables$idxExperimentEdges[i])
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUpTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
kk2
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
experimentalNode <- variables$expNodesReducedUpTarget[intervalNodes][kk2[j]]
j <- 1
intervalNodes
intervalEdges
pp <- paste(" - ", variables$variables[variables$idxEdgesUp[which(kk1==kk2[j])]], collapse = "")
experimentalNode <- variables$expNodesReducedUpTarget[intervalNodes][kk2[j]]
constraints6 <- c(constraints6,
paste0(variables$variables[which(variables$exp==paste0("SpeciesUP ", experimentalNode, " in experiment ", i))], pp, " <= 0"))
cntNodes <- variables$idxExperimentNodes[i]+1
cntEdges <- variables$idxExperimentEdges[i]+1
i <- 2
intervalNodes <- c((cntNodes):variables$idxExperimentNodes[i])
intervalEdges <- c((cntEdges):variables$idxExperimentEdges[i])
intervalNodes
intervalEdges
kk1 <- match(variables$reactionTarget[intervalEdges], variables$expNodesReducedUpTarget[intervalNodes])
kk2 <- unique(kk1[!is.na(kk1)])
kk1
kk2
variables$reactionTarget[intervalEdges]
variables$expNodesReducedUpTarget[intervalNodes]
variables$expNodesReducedUpTarget
variables$reactionTarget[intervalEdges]
variables$reactionTarget
variables$expNodesReducedUpTarget
####
# Loading stuff
rm(list=ls())
source("script1.R")
library(readr)
measurements <- read_delim("measurements_Case1_AND_Case4.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
inputs <- read.table("inputs_Case1_AND_Case4.txt", sep="\t", header = TRUE)
network <- read.table("network_Ex1_positive.sif", sep = "\t", header = FALSE)
data <- measurements
pknList <- as.data.frame(network)
colnames(pknList) <- c("Node1", "Sign", "Node2")
# upNodes <- "P"
####
# Executing functions
dataMatrix <- buildDataMatrix(data = data, pknList = pknList, inputs = inputs, cutoff = 0.1)
variables <- create_variables(pknList = pknList, dataMatrix = dataMatrix)
bounds <- write_boundaries(variables = variables)
oF <- write_objective_function(dataMatrix = dataMatrix, variables = variables, alpha = 1, beta = 0.01)
c0 <- write_constraints_objFunction(variables = variables, dataMatrix = dataMatrix)
c1 <- write_constraints_1(variables = variables)
c2 <- write_constraints_2(variables = variables)
c3 <- write_constraints_3(variables = variables)
c4 <- write_constraints_4(variables = variables)
c5 <- write_constraints_5(variables = variables)
c6 <- write_constraints_6(variables = variables, dataMatrix = dataMatrix)
c7 <- write_constraints_7(variables = variables, dataMatrix = dataMatrix)
c8 <- write_constraints_8(variables = variables, inputs = inputs)
allC <- all_constraints(c0 = c0, c1 = c2, c2 = c2, c3 = c3, c4 = c4, c5 = c5, c6 = c6, c7 = c7, c8 = c8)
# write the .lp file
data = "testFile.lp"
write("enter Problem", data)
write("", data, append = TRUE)
write("Minimize", data, append = TRUE)
write(oF, data, append = TRUE)
write("Subject To", data, append = TRUE)
write(allC, data, append = TRUE)
write("Bounds", data, append = TRUE)
write(bounds, data, append = TRUE)
write("Integers", data, append = TRUE)
write(variables$variables, data, append = TRUE)
write("End", data, append = TRUE)
system(paste0(getwd(), "/cplex -f cplexCommand.txt"))
file.remove(... = "cplex.log")
# file.remove(... = "testFile.lp")
variables$exp
c6
c7
